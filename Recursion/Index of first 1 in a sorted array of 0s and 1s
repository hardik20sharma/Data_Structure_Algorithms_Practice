int sol(int a[], int n, int low, int high)
{
    int mid = (high + low) / 2;
    
    if(high < low)
        return -1;

    if(a[mid] == 1 && a[mid-1] == 0)
        return mid;
    
    if(a[mid] == 0 && a[mid+1] == 1)
        return mid + 1;
    
    else if(a[mid] == 1 && a[mid-1] == 1)
        return sol(a, n, low, mid-1);
    
    else if(a[mid] == 0 && a[mid-1] == 0)
        return sol(a, n, mid + 1, high);
}

int firstIndex(int a[], int n) 
{
    if(a[n-1] == 0)
        return -1;
    
    if(a[0] == 1)
        return 0;

    return sol(a, n, 0, n);
}

int main()
{
  int n = 10;
  int a[n] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1};
  cout << firstIndex(a, n);
}
